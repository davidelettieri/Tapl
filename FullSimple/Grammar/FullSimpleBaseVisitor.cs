//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FullSimple.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFullSimpleVisitor{Result}"/>,
/// which can be extended to create a visitor which only needs to handle a subset
/// of the available methods.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class FullSimpleBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, IFullSimpleVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>toplevel_command</c>
	/// labeled alternative in <see cref="FullSimpleParser.toplevel"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitToplevel_command([NotNull] FullSimpleParser.Toplevel_commandContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>toplevel_eof</c>
	/// labeled alternative in <see cref="FullSimpleParser.toplevel"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitToplevel_eof([NotNull] FullSimpleParser.Toplevel_eofContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>command_term</c>
	/// labeled alternative in <see cref="FullSimpleParser.command"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCommand_term([NotNull] FullSimpleParser.Command_termContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>command_tybinder</c>
	/// labeled alternative in <see cref="FullSimpleParser.command"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCommand_tybinder([NotNull] FullSimpleParser.Command_tybinderContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>command_binder</c>
	/// labeled alternative in <see cref="FullSimpleParser.command"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCommand_binder([NotNull] FullSimpleParser.Command_binderContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.binder"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitBinder([NotNull] FullSimpleParser.BinderContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.type"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitType([NotNull] FullSimpleParser.TypeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.atype"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAtype([NotNull] FullSimpleParser.AtypeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.tybinder"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTybinder([NotNull] FullSimpleParser.TybinderContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.fieldtypes"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFieldtypes([NotNull] FullSimpleParser.FieldtypesContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.nefieldtypes"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNefieldtypes([NotNull] FullSimpleParser.NefieldtypesContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.fieldtype"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFieldtype([NotNull] FullSimpleParser.FieldtypeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.arrowtype"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArrowtype([NotNull] FullSimpleParser.ArrowtypeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_appterm</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_appterm([NotNull] FullSimpleParser.Term_apptermContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_ift</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_ift([NotNull] FullSimpleParser.Term_iftContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_caseOf</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_caseOf([NotNull] FullSimpleParser.Term_caseOfContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_llcid</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_llcid([NotNull] FullSimpleParser.Term_llcidContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_luc</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_luc([NotNull] FullSimpleParser.Term_lucContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_ll</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_ll([NotNull] FullSimpleParser.Term_llContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_lu</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_lu([NotNull] FullSimpleParser.Term_luContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>term_letrec</c>
	/// labeled alternative in <see cref="FullSimpleParser.term"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTerm_letrec([NotNull] FullSimpleParser.Term_letrecContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_times</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_times([NotNull] FullSimpleParser.Appterm_timesContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_iszero</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_iszero([NotNull] FullSimpleParser.Appterm_iszeroContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_path</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_path([NotNull] FullSimpleParser.Appterm_pathContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_app_path</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_app_path([NotNull] FullSimpleParser.Appterm_app_pathContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_succ</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_succ([NotNull] FullSimpleParser.Appterm_succContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_pred</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_pred([NotNull] FullSimpleParser.Appterm_predContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>appterm_fix</c>
	/// labeled alternative in <see cref="FullSimpleParser.appterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAppterm_fix([NotNull] FullSimpleParser.Appterm_fixContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>ascribeterm_aaa</c>
	/// labeled alternative in <see cref="FullSimpleParser.ascribeterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAscribeterm_aaa([NotNull] FullSimpleParser.Ascribeterm_aaaContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>ascribeterm_a</c>
	/// labeled alternative in <see cref="FullSimpleParser.ascribeterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAscribeterm_a([NotNull] FullSimpleParser.Ascribeterm_aContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>pathterm_intv</c>
	/// labeled alternative in <see cref="FullSimpleParser.pathterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPathterm_intv([NotNull] FullSimpleParser.Pathterm_intvContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>pathterm_lcid</c>
	/// labeled alternative in <see cref="FullSimpleParser.pathterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPathterm_lcid([NotNull] FullSimpleParser.Pathterm_lcidContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>pathterm_asterm</c>
	/// labeled alternative in <see cref="FullSimpleParser.pathterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPathterm_asterm([NotNull] FullSimpleParser.Pathterm_astermContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>termseq_term</c>
	/// labeled alternative in <see cref="FullSimpleParser.termseq"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTermseq_term([NotNull] FullSimpleParser.Termseq_termContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>termseq_termseq</c>
	/// labeled alternative in <see cref="FullSimpleParser.termseq"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTermseq_termseq([NotNull] FullSimpleParser.Termseq_termseqContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_paren</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_paren([NotNull] FullSimpleParser.Aterm_parenContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_inert</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_inert([NotNull] FullSimpleParser.Aterm_inertContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_true</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_true([NotNull] FullSimpleParser.Aterm_trueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_false</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_false([NotNull] FullSimpleParser.Aterm_falseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_lt</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_lt([NotNull] FullSimpleParser.Aterm_ltContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_lcid</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_lcid([NotNull] FullSimpleParser.Aterm_lcidContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_stringv</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_stringv([NotNull] FullSimpleParser.Aterm_stringvContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_unit</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_unit([NotNull] FullSimpleParser.Aterm_unitContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_fields</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_fields([NotNull] FullSimpleParser.Aterm_fieldsContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_floatv</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_floatv([NotNull] FullSimpleParser.Aterm_floatvContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>aterm_intv</c>
	/// labeled alternative in <see cref="FullSimpleParser.aterm"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAterm_intv([NotNull] FullSimpleParser.Aterm_intvContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.cases"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCases([NotNull] FullSimpleParser.CasesContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.case"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCase([NotNull] FullSimpleParser.CaseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="FullSimpleParser.fields"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFields([NotNull] FullSimpleParser.FieldsContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>nefields_field</c>
	/// labeled alternative in <see cref="FullSimpleParser.nefields"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNefields_field([NotNull] FullSimpleParser.Nefields_fieldContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>nefields_field_comma_nefields</c>
	/// labeled alternative in <see cref="FullSimpleParser.nefields"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNefields_field_comma_nefields([NotNull] FullSimpleParser.Nefields_field_comma_nefieldsContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>field_lcid</c>
	/// labeled alternative in <see cref="FullSimpleParser.field"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitField_lcid([NotNull] FullSimpleParser.Field_lcidContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>field_term</c>
	/// labeled alternative in <see cref="FullSimpleParser.field"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitField_term([NotNull] FullSimpleParser.Field_termContext context) { return VisitChildren(context); }
}
